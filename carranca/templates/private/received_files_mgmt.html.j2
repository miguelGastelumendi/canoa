{# ------------------------------------

received_file_mgmt.html.j2
--------------------------
Manages and displays a grid of received files

Expected backend vars:
» List of the users, just when admin
code, name, enabled in users_list


mgd
--------------------------------------- #}
{# cSpell:ignore onclick tojson onsubmit dnld Rprt endfor onchange #}

{# only specify if different from default #}

{% set dlg_cls_size= 'modal-xl' %}

{% extends "./layouts/dialog.html.j2" %}

{% if dlg_bke_display_ui %}

{% block base_blc_head_js %}
{% include "./includes/grid-header.html.j2" %}
{% endblock base_blc_head_js %}


{# ╒════════════════ Dialog Body ════════════════╕ #}
{% block dlg_blc_body %}

{% include "./includes/grid-body.html.j2" %}

{% endblock dlg_blc_body %}
{# ╘════════════════ Dialog Body ════════════════╛ #}

{% block dlg_blc_footer_buttons %}
{# <div class="mb-3 row"> #}
    {% if users_list %}
    <div class="col-auto">
        <select id="{{sel_id}}" class="form-control form-select" style="{{sel_width}}">
            {% for code, name, enabled in users_list %}
            <option value="{{code}}" {% if not enabled %}disabled{% endif %}>{{name | safe}}</option>
            {% endfor %}
        </select>
    </div>
    {% endif %}
    {# TODO: from "includes/_action_forms_and_btns.html.j2" import btn_click #}
    <div class="col-auto">
        <button type="button" onclick="download('{{dnld_F}}')" id="btn{{dnld_F}}" class="form-control form-main-btn"
            style="{{btn_width}}" disabled>
            {{btnDwnLoadFile}}
        </button>
    </div>
    <div class="col-auto">
        <button type="button" onclick="download('{{dnld_R}}')" id="btn{{dnld_R}}" class="form-control form-main-btn"
            style="{{btn_width}}" disabled>
            {{btnDwnLoadRprt}}
        </button>
    </div>
{# </div> #}
{% endblock dlg_blc_footer_buttons %}

{% block dlg_blc_javascript %}
<script id="data_to_json">
    const usersList = {{ users_list | default ([]) | tojson}}
    const gridRows = ({{ files_rec | default ([]) | tojson}}).map(item => ({ ...item, when: item.when ? new Date(item.when) : null }));
    const listUser = {{ users_list | default ([]) | tojson}}
    const colMeta = {{ grid_col_meta | tojson}};
</script>
<script id="file_download">
    const gridID = '{{grid_id}}';
    const dateFormat = '{{userDateFormat}}';
    const itemNone = '{{itemNone}}';
    const isPower = {{ user_is_power | tojson}};
    const btnFile = document.getElementById('btn{{dnld_F}}');
    const btnRprt = document.getElementById('btn{{dnld_R}}');
    let activeID = null;

    const download = (t) => {
        if (activeID) {
            document.getElementById('{{form_cargo_id}}').value = `${activeID}${t}`;;
            document.getElementById('{{dlg_submit_form_id}}').submit();
        }
    };

    const setActiveRow = (row) => {
        activeID = null;
        if (!row) { return; }
        activeID = row.data["id"];
        btnFile.disabled = !row.data.data_f_found;
        btnRprt.disabled = !row.data.report_found;
    };

    document.getElementById('{{sel_id}}').addEventListener('change',
        (e) => {
            sleep();
            setTimeout(() => {
                const href = '{{ private_route('received_files_mgmt') }}?id=' + e.target.value;
                window.location.href = href
            }, 20);
        }
    );
</script>

<script src='{{static_route("js/received_files_mgmt.js")}}'></script>
{% endblock dlg_blc_javascript %}

{# ╒════════════════ Dialog Forms ════════════════╕ #}
{% block dlg_blc_forms %}

{% from "includes/_action_forms_and_btns.html.j2" import action_form__submit %}
{{ action_form__submit(dlg_submit_form_id, private_route('received_file_download'), extra='target="_blank"') }}

{% endblock dlg_blc_forms %}
{# ╘═════════════════ Dialog Forms ════════════════╛ #}

{% endif %}
{#--- end » dlg_bke_display_ui --- #}

{# eof #}